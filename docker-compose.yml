version: '3.7'

volumes:
  backend-data:
  node_modules:
  db:
  db_ca:
  db_reg:
  db_airflow:
  airflow:

services:
  proxy:
    image: unicef/hct-mis-proxy
    environment:
      - DJANGO_APPLICATION_SERVICE_HOST=backend
      - FRONTEND_SERVICE_HOST=frontend
    build:
      context: ./proxy
      dockerfile: ./Dockerfile
    ports:
      - "8082:80"
    depends_on:
      - backend
      - frontend
    volumes:
      - backend-data:/data

  redis:
    restart: always
    image: redis:4.0.11-alpine3.8
    expose:
      - "6379"

  backend:
    stdin_open: true
    tty: true
    image: unicef/hct-mis-backend
    env_file:
      - .env
    environment:
      - REDIS_INSTANCE=redis:6379
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - "8080:8000"
    volumes:
      - ./backend:/code/
      - backend-data:/data
    # FIXME: I know that links are deprecated
    links:
      - airflow_webserver
    command: "dev"
    depends_on:
      - db
      - redis
      - cash_assist_datahub_db
      - registration_datahub_db

  #    backend-jobs:
  #        image: unicef/hct-mis-backend
  #        env_file:
  #            - .env
  #        environment:
  #            - REDIS_INSTANCE=redis:6379
  #        build:
  #            context: ./backend
  #            dockerfile: ./Dockerfile
  #            args:
  #                ENV: dev
  #                REQUIREMENT_FILE: dev.pip
  #        volumes:
  #            - ./backend:/code/
  #        depends_on:
  #            - backend
  #        command: bash -c "/./worker-entrypoint.sh"

  db:
    image: mdillon/postgis:9.5-alpine
    volumes:
      - db:/data/postgres
    env_file:
      - .env
    ports:
      - "5433:5432"

  cash_assist_datahub_db:
    image: mdillon/postgis:9.5-alpine
    volumes:
      - db_ca:/data/postgres
    env_file:
      - .env

  registration_datahub_db:
    image: mdillon/postgis:9.5-alpine
    volumes:
      - db_reg:/data/postgres
    env_file:
      - .env

  airflow_db:
    image: postgres:9.5.15-alpine
    volumes:
      - db_airflow:/data/postgres
    env_file:
      - ./airflow/config/.env_airflow

  airflow_webserver:
    image: unicef/hct-airflow-webserver
    build:
      context: ./airflow
      dockerfile: ./Dockerfile
    ports:
      - "4200:4200"
    env_file:
      - ./airflow/config/.env_airflow
    restart: always
    depends_on:
      - airflow_db
      - db
      - registration_datahub_db
      - cash_assist_datahub_db
      - airflow_worker
      - redis
    links:
      - airflow_worker
    volumes:
      - ./airflow/connectors:/usr/local/airflow/connectors
      - ./airflow/dags:/usr/local/airflow/dags
      - ./backend:/usr/local/airflow/backend
      - backend-data:/usr/local/airflow/data
    command: webserver
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3

  airflow_flower:
    image: unicef/hct-airflow-flower
    build:
      context: ./airflow
      dockerfile: ./Dockerfile
    restart: always
    depends_on:
      - airflow_db
      - redis
    volumes:
      - ./airflow/connectors:/usr/local/airflow/connectors
      - ./airflow/dags:/usr/local/airflow/dags
    env_file:
      - ./airflow/config/.env_airflow
    ports:
      - "5555:5555"
    command: flower

  airflow_scheduler:
    image: unicef/hct-airflow-scheduler
    build:
      context: ./airflow
      dockerfile: ./Dockerfile
    env_file:
      - ./airflow/config/.env_airflow
    restart: always
    volumes:
      - ./airflow/connectors:/usr/local/airflow/connectors
      - ./airflow/dags:/usr/local/airflow/dags
      - ./backend:/usr/local/airflow/backend
      - backend-data:/usr/local/airflow/data
    command: scheduler
    depends_on:
      - airflow_webserver
      - airflow_db

  airflow_worker:
    image: unicef/hct-airflow-worker
    build:
      context: ./airflow
      dockerfile: ./Dockerfile
    env_file:
      - ./airflow/config/.env_airflow
    restart: always
    volumes:
      - ./airflow/dags:/usr/local/airflow/dags
      - ./airflow/connectors:/usr/local/airflow/connectors
      - ./backend:/usr/local/airflow/backend
      - backend-data:/usr/local/airflow/data
    command: worker

  frontend:
    image: unicef/hct-mis-frontend
    env_file:
      - .env
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
      target: dev
      args:
        ENV: dev
    ports:
      - "8088:80"
      - "3000:3000"
    volumes:
      - ./frontend/:/code
      - /code/node_modules
    command: sh -c 'npm start'
