version: '3.7'

volumes:
  backend-data:
  db:
  db_ca:
  db_mis:
  db_erp:
  db_reg:
  data_es:
  data_es_test:
  ipython_data_local:


services:
  proxy:
    image: unicef/hct-mis-proxy
    environment:
      - DJANGO_APPLICATION_SERVICE_HOST=backend
      - FRONTEND_HOST=host.docker.internal:3000
    build:
      context: ./proxy
      dockerfile: ./Dockerfile
    ports:
      - "8082:80"
    depends_on:
      - backend
    volumes:
      - backend-data:/data

  redis:
    restart: always
    image: redis:4.0.11-alpine3.8
    expose:
      - "6379"

  backend:
    stdin_open: true
    entrypoint: docker-entrypoint.sh
    image: unicef/hct-mis-backend
    env_file:
      - .env
    environment:
      - REDIS_INSTANCE=redis:6379
      - PYTHONUNBUFFERED=1
    build:
      context: ./backend
      dockerfile: ./Dockerfile
      target: dev
      args:
        APP_ENV: DEV
    ports:
      - "8080:8000"
    volumes:
      - ./backend:/code/
      - backend-data:/data
      - ipython_data_local:/root/.ipython
    command: "dev"
    depends_on:
      - db
      - redis
      - elasticsearch

  celery_worker:
    stdin_open: true
    tty: true
    image: unicef/hct-mis-backend
    env_file:
      - .env
    environment:
      - REDIS_INSTANCE=redis:6379
    volumes:
      - ./backend:/code/
      - backend-data:/data
    restart: always
    command: "celery-worker"
    depends_on:
      - backend
      - db
      - redis
      - elasticsearch

  celery-beat:
    stdin_open: true
    tty: true
    image: unicef/hct-mis-backend
    env_file:
      - .env
    environment:
      - REDIS_INSTANCE=redis:6379
    volumes:
      - ./backend:/code/
      - backend-data:/data
    restart: always
    command: "celery-beat"
    depends_on:
      - backend
      - db
      - redis
      - elasticsearch

  db:
    image: kartoza/postgis:14-3
    volumes:
      - db:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_MULTIPLE_DATABASES: unicef_hct_mis_cashassist,rdi_datahub,mis_datahub,erp_datahub,ca_datahub
    env_file:
      - .env
    ports:
      - "5433:5432"

  elasticsearch:
    image: unicef/hct-elasticsearch
    container_name: elasticsearch
    build:
      context: elasticsearch
      dockerfile: Dockerfile
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data_es:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.4.0
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

