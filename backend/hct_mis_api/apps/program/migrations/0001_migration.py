# Generated by Django 2.2.16 on 2021-04-15 20:18

import concurrency.fields
from decimal import Decimal
import django.contrib.postgres.fields.citext
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_migration'),
        ('payment', '0001_migration'),
    ]

    operations = [
        migrations.CreateModel(
            name='Program',
            fields=[
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('version', concurrency.fields.IntegerVersionField(default=0, help_text='record revision number')),
                ('name', django.contrib.postgres.fields.citext.CICharField(db_index=True, max_length=255, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(255), django.core.validators.RegexValidator('\\s{2,}', 'Double spaces characters are not allowed.', code='double_spaces_characters_not_allowed', inverse_match=True), django.core.validators.RegexValidator('(^\\s+)|(\\s+$)', 'Leading or trailing spaces characters are not allowed.', code='leading_trailing_spaces_characters_not_allowed', inverse_match=True), django.core.validators.ProhibitNullCharactersValidator()])),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('ACTIVE', 'Active'), ('FINISHED', 'Finished')], db_index=True, max_length=10)),
                ('start_date', models.DateField(db_index=True)),
                ('end_date', models.DateField(db_index=True)),
                ('description', models.CharField(blank=True, max_length=255, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(255)])),
                ('ca_id', django.contrib.postgres.fields.citext.CICharField(blank=True, db_index=True, max_length=255, null=True)),
                ('ca_hash_id', django.contrib.postgres.fields.citext.CICharField(blank=True, db_index=True, max_length=255, null=True)),
                ('budget', models.DecimalField(db_index=True, decimal_places=2, max_digits=11, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('frequency_of_payments', models.CharField(choices=[('REGULAR', 'Regular'), ('ONE_OFF', 'One-off')], max_length=50)),
                ('sector', models.CharField(choices=[('CHILD_PROTECTION', 'Child Protection'), ('EDUCATION', 'Education'), ('HEALTH', 'Health'), ('MULTI_PURPOSE', 'Multi Purpose'), ('NUTRITION', 'Nutrition'), ('SOCIAL_POLICY', 'Social Policy'), ('WASH', 'WASH')], db_index=True, max_length=50)),
                ('scope', models.CharField(choices=[('FOR_PARTNERS', 'For partners'), ('UNICEF', 'Unicef')], max_length=50)),
                ('cash_plus', models.BooleanField()),
                ('population_goal', models.PositiveIntegerField()),
                ('administrative_areas_of_implementation', models.CharField(blank=True, max_length=255, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(255)])),
                ('individual_data_needed', models.BooleanField(default=False, help_text='\n        This boolean decides whether the target population sync will send\n        all individuals of a household thats part of the population or only\n        the relevant ones (collectors etc.)')),
                ('admin_areas', models.ManyToManyField(blank=True, related_name='programs', to='core.AdminArea')),
                ('business_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.BusinessArea')),
            ],
            options={
                'verbose_name': 'Programme',
                'unique_together': {('name', 'business_area')},
            },
        ),
        migrations.CreateModel(
            name='CashPlan',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('ca_id', models.CharField(max_length=255, null=True)),
                ('ca_hash_id', models.UUIDField(null=True, unique=True)),
                ('status', models.CharField(choices=[('Distribution Completed', 'Distribution Completed'), ('Distribution Completed with Errors', 'Distribution Completed with Errors'), ('Transaction Completed', 'Transaction Completed'), ('Transaction Completed with Errors', 'Transaction Completed with Errors')], db_index=True, max_length=255)),
                ('status_date', models.DateTimeField()),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('distribution_level', models.CharField(max_length=255)),
                ('start_date', models.DateTimeField(db_index=True)),
                ('end_date', models.DateTimeField(db_index=True)),
                ('dispersion_date', models.DateTimeField()),
                ('coverage_duration', models.PositiveIntegerField()),
                ('coverage_unit', models.CharField(max_length=255)),
                ('comments', models.CharField(max_length=255, null=True)),
                ('delivery_type', models.CharField(choices=[('Cardless cash withdrawal', 'Cardless cash withdrawal'), ('Cash', 'Cash'), ('Cash by FSP', 'Cash by FSP'), ('Cheque', 'Cheque'), ('Deposit to Card', 'Deposit to Card'), ('In Kind', 'In Kind'), ('Mobile Money', 'Mobile Money'), ('Other', 'Other'), ('Pre-paid card', 'Pre-paid card'), ('Referral', 'Referral'), ('Transfer', 'Transfer'), ('Transfer to Account', 'Transfer to Account'), ('Voucher', 'Voucher')], db_index=True, max_length=24, null=True)),
                ('assistance_measurement', models.CharField(db_index=True, max_length=255)),
                ('assistance_through', models.CharField(db_index=True, max_length=255)),
                ('vision_id', models.CharField(max_length=255, null=True)),
                ('funds_commitment', models.CharField(max_length=255, null=True)),
                ('exchange_rate', models.DecimalField(blank=True, decimal_places=8, max_digits=12, null=True)),
                ('down_payment', models.CharField(max_length=255, null=True)),
                ('validation_alerts_count', models.IntegerField()),
                ('total_persons_covered', models.IntegerField(db_index=True)),
                ('total_persons_covered_revised', models.IntegerField(db_index=True)),
                ('total_entitled_quantity', models.DecimalField(db_index=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('total_entitled_quantity_revised', models.DecimalField(db_index=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('total_delivered_quantity', models.DecimalField(db_index=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('total_undelivered_quantity', models.DecimalField(db_index=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('verification_status', models.CharField(choices=[('PENDING', 'Pending'), ('ACTIVE', 'Active'), ('FINISHED', 'Finished')], db_index=True, default='PENDING', max_length=10)),
                ('business_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.BusinessArea')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cash_plans', to='program.Program')),
                ('service_provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cash_plans', to='payment.ServiceProvider')),
            ],
            options={
                'verbose_name': 'Cash Plan',
            },
        ),
    ]
