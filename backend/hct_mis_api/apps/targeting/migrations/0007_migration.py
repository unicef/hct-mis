# Generated by Django 2.2.8 on 2020-04-01 08:28

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import model_utils.fields
import targeting.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('household', '0012_migration'),
        ('program', '0007_migration'),
        ('targeting', '0006_migration'),
    ]

    operations = [
        migrations.CreateModel(
            name='HouseholdSelection',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vulnerability_score', models.DecimalField(blank=True, decimal_places=3, help_text='Written by a tool such as Corticon.', max_digits=6, null=True)),
                ('final', models.BooleanField(default=True, help_text='\n            When set to True, this means the household has been selected from \n            the candidate list. Only these households will be sent to\n            CashAssist when a sync is run for the associated target population.\n            ')),
                ('household', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selections', to='household.Household')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TargetingCriteria',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, targeting.models.TargetingCriteriaQueryingMixin),
        ),
        migrations.CreateModel(
            name='TargetingCriteriaRule',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('targeting_criteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='targeting.TargetingCriteria')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, targeting.models.TargetingCriteriaRuleQueryingMixin),
        ),
        migrations.CreateModel(
            name='TargetingCriteriaRuleFilter',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comparision_method', models.CharField(choices=[('EQUALS', 'Equals'), ('NOT_EQUALS', 'Not Equals'), ('CONTAINS', 'Contains'), ('NOT_CONTAINS', 'Does not contain'), ('RANGE', 'In between <>'), ('NOT_IN_RANGE', 'Not in between <>'), ('GREATER_THAN', 'Greater than'), ('LESS_THAN', 'Less than')], max_length=20)),
                ('is_flex_field', models.BooleanField(default=False)),
                ('field_name', models.CharField(max_length=20)),
                ('arguments', django.contrib.postgres.fields.jsonb.JSONField(help_text='\n            Array of arguments\n            ')),
                ('targeting_criteria_rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filters', to='targeting.TargetingCriteriaRule')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.DeleteModel(
            name='FilterAttrType',
        ),
        migrations.RemoveField(
            model_name='targetpopulation',
            name='_total_family_size',
        ),
        migrations.RemoveField(
            model_name='targetpopulation',
            name='_total_households',
        ),
        migrations.RemoveField(
            model_name='targetpopulation',
            name='is_removed',
        ),
        migrations.RemoveField(
            model_name='targetpopulation',
            name='last_edited_at',
        ),
        migrations.AddField(
            model_name='targetpopulation',
            name='candidate_list_total_households',
            field=models.PositiveIntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='targetpopulation',
            name='candidate_list_total_individuals',
            field=models.PositiveIntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='targetpopulation',
            name='final_list_total_households',
            field=models.PositiveIntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='targetpopulation',
            name='final_list_total_individuals',
            field=models.PositiveIntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='targetpopulation',
            name='program',
            field=models.ForeignKey(blank=True, help_text='Set only when the target population moves from draft to\n            candidate list frozen state (approved)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='program.Program'),
        ),
        migrations.AddField(
            model_name='targetpopulation',
            name='selection_computation_metadata',
            field=models.TextField(blank=True, help_text='This would be the metadata written to by say Corticon on how\n        it arrived at the selection it made.', null=True),
        ),
        migrations.RemoveField(
            model_name='targetpopulation',
            name='households',
        ),
        migrations.AddField(
            model_name='targetpopulation',
            name='households',
            field=models.ManyToManyField(related_name='target_populations', through='targeting.HouseholdSelection', to='household.Household'),
        ),
        migrations.AlterField(
            model_name='targetpopulation',
            name='status',
            field=models.CharField(choices=[('DRAFT', 'Draft'), ('APPROVED', 'Approved'), ('FINALIZED', 'Finalized')], default='DRAFT', max_length=256),
        ),
        migrations.DeleteModel(
            name='TargetRule',
        ),
        migrations.AddField(
            model_name='householdselection',
            name='target_population',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selections', to='targeting.TargetPopulation'),
        ),
        migrations.AddField(
            model_name='targetpopulation',
            name='candidate_list_targeting_criteria',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='target_population_candidate', to='targeting.TargetingCriteria'),
        ),
        migrations.AddField(
            model_name='targetpopulation',
            name='final_list_targeting_criteria',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='target_population_final', to='targeting.TargetingCriteria'),
        ),
    ]
