# Generated by Django 2.2.16 on 2021-04-15 20:18

import concurrency.fields
from django.conf import settings
import django.contrib.postgres.fields.citext
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import hct_mis_api.apps.targeting.models
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_migration'),
        ('household', '0001_migration'),
        ('steficon', '0001_migration'),
        ('program', '0001_migration'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HouseholdSelection',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('vulnerability_score', models.DecimalField(blank=True, decimal_places=3, help_text='Written by a tool such as Corticon.', max_digits=6, null=True)),
                ('final', models.BooleanField(default=True, help_text='\n            When set to True, this means the household has been selected from\n            the candidate list. Only these households will be sent to\n            CashAssist when a sync is run for the associated target population.\n            ')),
                ('household', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selections', to='household.Household')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TargetingCriteria',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, hct_mis_api.apps.targeting.models.TargetingCriteriaQueryingMixin),
        ),
        migrations.CreateModel(
            name='TargetingCriteriaRule',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('targeting_criteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='targeting.TargetingCriteria')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, hct_mis_api.apps.targeting.models.TargetingCriteriaRuleQueryingMixin),
        ),
        migrations.CreateModel(
            name='TargetPopulation',
            fields=[
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('version', concurrency.fields.IntegerVersionField(default=0, help_text='record revision number')),
                ('name', django.contrib.postgres.fields.citext.CICharField(db_index=True, max_length=255, unique=True, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(255), django.core.validators.RegexValidator('\\s{2,}', 'Double spaces characters are not allowed.', code='double_spaces_characters_not_allowed', inverse_match=True), django.core.validators.RegexValidator('(^\\s+)|(\\s+$)', 'Leading or trailing spaces characters are not allowed.', code='leading_trailing_spaces_characters_not_allowed', inverse_match=True), django.core.validators.ProhibitNullCharactersValidator()])),
                ('ca_id', django.contrib.postgres.fields.citext.CICharField(blank=True, max_length=255, null=True)),
                ('ca_hash_id', django.contrib.postgres.fields.citext.CICharField(blank=True, max_length=255, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('finalized_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Open'), ('APPROVED', 'Closed'), ('FINALIZED', 'Sent')], db_index=True, default='DRAFT', max_length=256)),
                ('candidate_list_total_households', models.PositiveIntegerField(blank=True, null=True)),
                ('candidate_list_total_individuals', models.PositiveIntegerField(blank=True, null=True)),
                ('final_list_total_households', models.PositiveIntegerField(blank=True, null=True)),
                ('final_list_total_individuals', models.PositiveIntegerField(blank=True, null=True)),
                ('selection_computation_metadata', models.TextField(blank=True, help_text='This would be the metadata written to by say Corticon on how\n        it arrived at the selection it made.', null=True)),
                ('sent_to_datahub', models.BooleanField(db_index=True, default=False, help_text='\n            Flag set when TP is processed by celery task\n            ')),
                ('vulnerability_score_min', models.DecimalField(blank=True, decimal_places=3, help_text='Written by a tool such as Corticon.', max_digits=6, null=True)),
                ('vulnerability_score_max', models.DecimalField(blank=True, decimal_places=3, help_text='Written by a tool such as Corticon.', max_digits=6, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_target_populations', to=settings.AUTH_USER_MODEL)),
                ('business_area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.BusinessArea')),
                ('candidate_list_targeting_criteria', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='target_population_candidate', to='targeting.TargetingCriteria')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='target_populations', to=settings.AUTH_USER_MODEL)),
                ('final_list_targeting_criteria', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='target_population_final', to='targeting.TargetingCriteria')),
                ('finalized_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='finalized_target_populations', to=settings.AUTH_USER_MODEL)),
                ('households', models.ManyToManyField(related_name='target_populations', through='targeting.HouseholdSelection', to='household.Household')),
                ('program', models.ForeignKey(blank=True, help_text='Set only when the target population moves from draft to\n            candidate list frozen state (approved)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='program.Program')),
                ('steficon_rule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='target_populations', to='steficon.Rule')),
            ],
            options={
                'verbose_name': 'Target Population',
                'unique_together': {('name', 'business_area')},
            },
        ),
        migrations.CreateModel(
            name='TargetingIndividualRuleFilterBlock',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('target_only_hoh', models.BooleanField(default=False)),
                ('targeting_criteria_rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='individuals_filters_blocks', to='targeting.TargetingCriteriaRule')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, hct_mis_api.apps.targeting.models.TargetingIndividualRuleFilterBlockMixin),
        ),
        migrations.CreateModel(
            name='TargetingIndividualBlockRuleFilter',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('comparision_method', models.CharField(choices=[('EQUALS', 'Equals'), ('NOT_EQUALS', 'Not Equals'), ('CONTAINS', 'Contains'), ('NOT_CONTAINS', 'Does not contain'), ('RANGE', 'In between <>'), ('NOT_IN_RANGE', 'Not in between <>'), ('GREATER_THAN', 'Greater than'), ('LESS_THAN', 'Less than')], max_length=20)),
                ('is_flex_field', models.BooleanField(default=False)),
                ('field_name', models.CharField(max_length=50)),
                ('arguments', django.contrib.postgres.fields.jsonb.JSONField(help_text='\n            Array of arguments\n            ')),
                ('individuals_filters_block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='individual_block_filters', to='targeting.TargetingIndividualRuleFilterBlock')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, hct_mis_api.apps.targeting.models.TargetingCriteriaFilterMixin),
        ),
        migrations.CreateModel(
            name='TargetingCriteriaRuleFilter',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('comparision_method', models.CharField(choices=[('EQUALS', 'Equals'), ('NOT_EQUALS', 'Not Equals'), ('CONTAINS', 'Contains'), ('NOT_CONTAINS', 'Does not contain'), ('RANGE', 'In between <>'), ('NOT_IN_RANGE', 'Not in between <>'), ('GREATER_THAN', 'Greater than'), ('LESS_THAN', 'Less than')], max_length=20)),
                ('is_flex_field', models.BooleanField(default=False)),
                ('field_name', models.CharField(max_length=50)),
                ('arguments', django.contrib.postgres.fields.jsonb.JSONField(help_text='\n            Array of arguments\n            ')),
                ('targeting_criteria_rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filters', to='targeting.TargetingCriteriaRule')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, hct_mis_api.apps.targeting.models.TargetingCriteriaFilterMixin),
        ),
        migrations.AddField(
            model_name='householdselection',
            name='target_population',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selections', to='targeting.TargetPopulation'),
        ),
    ]
