version: '3.7'
x-django-envs: &django_envs
  environment:
    - ENV=dev
    - SECRET_KEY=31283012-38dasda
    - POSTGRES_DB=postgres
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
    - DATABASE_URL=postgis://postgres:postgres@db:5432/postgres
    - DATABASE_URL_HUB_MIS=postgis://postgres:postgres@mis_datahub_db:5432/postgres
    - DATABASE_URL_HUB_CA=postgis://postgres:postgres@cash_assist_datahub_db:5432/postgres
    - DATABASE_URL_HUB_ERP=postgis://postgres:postgres@erp_datahub_db:5432/postgres
    - DATABASE_URL_HUB_REGISTRATION=postgis://postgres:postgres@registration_datahub_db:5432/postgres
    - POSTGRES_SSL_MODE=off
    - EMAIL_HOST=TBD
    - EMAIL_HOST_USER=TBD
    - EMAIL_HOST_PASSWORD=TBD
    - KOBO_KF_URL=https://kobo.humanitarianresponse.info
    - KOBO_KC_URL=https://kobo.humanitarianresponse.info
    - KOBO_MASTER_API_TOKEN=token
    - EXCHANGE_RATES_API_KEY=token
    - REDIS_INSTANCE=redis:6379
    - PYTHONUNBUFFERED=1
    - CYPRESS_TESTING=yes
    - DJANGO_ALLOWED_HOSTS=*

services:
  cypress:
    build:
      context: ../cypress
      dockerfile: Dockerfile
    volumes:
      - ../cypress:/app
      - ../cypress/node_modules:/app/node_modules
    command: test
    depends_on:
      - proxy

  proxy:
    image: unicef/hct-mis-proxy
    environment:
      - DJANGO_APPLICATION_SERVICE_HOST=backend
      - FRONTEND_HOST=frontend:3000
    build:
      context: ../proxy
      dockerfile: Dockerfile
    ports:
      - "8082:80"
    depends_on:
      - backend
      - frontend

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      target: dev
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
      - ../frontend/node_modules:/app/node_modules

  redis:
    restart: unless-stopped
    image: redis:4.0.11-alpine3.8

  backend:
    <<: *django_envs
    image: ${backend_image}
    # build:
    #   context: ../backend
    #   dockerfile: Dockerfile
    #   args:
    #     APP_ENV: DEV
    entrypoint: /code/docker-entrypoint.sh
    command: "cy"
    volumes:
      - ../backend:/code/
    depends_on:
      - db
      - redis
      - cash_assist_datahub_db
      - mis_datahub_db
      - erp_datahub_db
      - registration_datahub_db
      - elasticsearch
    ports:
      - "8080:8000"

  cash_assist_datahub_db:
    image: postgis/postgis:11-3.3-alpine
    <<: *django_envs

  mis_datahub_db:
    image: postgis/postgis:11-3.3-alpine
    <<: *django_envs

  erp_datahub_db:
    image: postgis/postgis:11-3.3-alpine
    <<: *django_envs

  registration_datahub_db:
    image: postgis/postgis:11-3.3-alpine
    <<: *django_envs

  db:
    image: postgis/postgis:11-3.3-alpine
    <<: *django_envs

  celery_worker:
    <<: *django_envs
    image: ${backend_image}
    # image: unicef/hct-mis-backend
    restart: unless-stopped
    command: "celery -A hct_mis_api.apps.core.celery worker -E -l info"
    depends_on:
      - backend
      - db
      - cash_assist_datahub_db
      - mis_datahub_db
      - erp_datahub_db
      - registration_datahub_db
      - redis
      - elasticsearch

  elasticsearch:
    <<: *django_envs
    image: unicef/hct-elasticsearch
    build:
      context: ../elasticsearch
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
