version: '3.7'

x-django-envs: &django_envs
  environment:
    - ENV=dev
    - SECRET_KEY=31283012-38dasda
    - POSTGRES_DB=postgres
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
    - DATABASE_URL=postgis://postgres:postgres@db:5432/postgres
    - DATABASE_URL_HUB_MIS=postgis://postgres:postgres@mis_datahub_db:5432/postgres
    - DATABASE_URL_HUB_CA=postgis://postgres:postgres@cash_assist_datahub_db:5432/postgres
    - DATABASE_URL_HUB_ERP=postgis://postgres:postgres@erp_datahub_db:5432/postgres
    - DATABASE_URL_HUB_REGISTRATION=postgis://postgres:postgres@registration_datahub_db:5432/postgres
    - POSTGRES_SSL_MODE=off
    - EMAIL_HOST=TBD
    - EMAIL_HOST_USER=TBD
    - EMAIL_HOST_PASSWORD=TBD
    - KOBO_KF_URL=https://kobo.humanitarianresponse.info
    - KOBO_KC_URL=https://kobo.humanitarianresponse.info
    - KOBO_MASTER_API_TOKEN=token
    - EXCHANGE_RATES_API_KEY=token
    - REDIS_INSTANCE=redis:6379
    - PYTHONUNBUFFERED=1
    - CYPRESS_TESTING=yes

services:
  cypress:
    build:
      context: ../cypress
      dockerfile: ./Dockerfile
    volumes:
      - ../cypress:/app
      # TODO: pass env with password/username
    command: test
    depends_on:
      - proxy

  proxy:
    image: unicef/hct-mis-proxy
    environment:
      - DJANGO_APPLICATION_SERVICE_HOST=backend
      - FRONTEND_HOST=host.docker.internal:3000
    build:
      context: ../proxy
      dockerfile: ./Dockerfile
    ports:
      - "8082:80"
    depends_on:
      - backend
      - frontend

  frontend:
    build:
      context: ../frontend
      dockerfile: ./Dockerfile
      target: dev
    ports:
      - "3000:3000"

  redis:
    restart: always
    image: redis:4.0.11-alpine3.8
    expose:
      - "6379"

  backend:
    stdin_open: true
    entrypoint: docker-entrypoint.sh
    image: unicef/hct-mis-backend
    <<: *django_envs
    build:
      context: ../backend
      dockerfile: ./Dockerfile
      args:
        APP_ENV: DEV
    ports:
      - "8080:8000"
    command: "cy"
    depends_on:
      - db
      - redis
      - elasticsearch

  celery_worker:
    stdin_open: true
    tty: true
    image: unicef/hct-mis-backend
    <<: *django_envs
    restart: always
    command: "celery-worker"
    depends_on:
      - backend
      - db
      - redis
      - elasticsearch

  celery-beat:
    stdin_open: true
    tty: true
    image: unicef/hct-mis-backend
    env_file:
      - .env
    environment:
      - REDIS_INSTANCE=redis:6379
    restart: always
    command: "celery-beat"
    depends_on:
      - backend
      - db
      - redis
      - elasticsearch

  db:
    image: kartoza/postgis:14-3
    environment:
      POSTGRES_MULTIPLE_DATABASES: unicef_hct_mis_cashassist,rdi_datahub,mis_datahub,erp_datahub,ca_datahub
    <<: *django_envs
    ports:
      - "5433:5432"

  elasticsearch:
    image: unicef/hct-elasticsearch
    container_name: elasticsearch
    build:
      context: ../elasticsearch
      dockerfile: Dockerfile
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200

