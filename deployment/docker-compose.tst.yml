version: '3.7'

volumes:
  backend-data:
  db:
  db_ca:
  db_mis:
  db_erp:
  db_reg:

services:

  redis:
    restart: always
    image: redis:4.0.11-alpine3.8
    expose:
      - "6379"

  backend:
    stdin_open: true
    tty: true
    image: ${backend_image}
    env_file:
      - .env
    environment:
      - REDIS_INSTANCE=redis:6379
    ports:
      - "8080:8000"
    volumes:
      - ./backend:/code/
      - backend-data:/data
    command: "dev"
    depends_on:
      - db
      - cash_assist_datahub_db
      - mis_datahub_db
      - erp_datahub_db
      - registration_datahub_db
      - redis
      - elasticsearch
  db:
    image: mdillon/postgis:11-alpine
    volumes:
      - db:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5433:5432"

  cash_assist_datahub_db:
    image: mdillon/postgis:11-alpine
    volumes:
      - db_ca:/var/lib/postgresql/data
    env_file:
      - .env

  mis_datahub_db:
    image: mdillon/postgis:11-alpine
    volumes:
      - db_mis:/var/lib/postgresql/data
    env_file:
      - .env

  erp_datahub_db:
    image: mdillon/postgis:11-alpine
    volumes:
      - db_erp:/var/lib/postgresql/data
    env_file:
      - .env

  registration_datahub_db:
    image: mdillon/postgis:11-alpine
    volumes:
      - db_reg:/var/lib/postgresql/data
    env_file:
      - .env


  celery_worker:
    stdin_open: true
    tty: true
    image: ${backend_image}
    env_file:
      - .env
    environment:
      - REDIS_INSTANCE=redis:6379
    build: ./backend
    volumes:
      - ./backend:/code/
      - backend-data:/data
    restart: always
    command: "celery -A hct_mis_api.apps.core.celery worker -E -l info"
    depends_on:
      - backend
      - db
      - cash_assist_datahub_db
      - mis_datahub_db
      - erp_datahub_db
      - registration_datahub_db
      - redis
      - elasticsearch

  elasticsearch:
    image: unicef/hct-elasticsearch
    build:
      context: elasticsearch
      dockerfile: Dockerfile
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
