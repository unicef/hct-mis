trigger: none
pr:
  - master
  - develop
resources:
  - repo: self

variables:
  # ========================================================================
  #                          Mandatory variables 
  # ========================================================================
  Docker.backend.filePath: "**/backend/Dockerfile"
  Docker.frontend.filePath: "**/frontend/Dockerfile"
  Docker.registry: "ICTD-HOPE-PRD-ACR"
  Docker.repository: "uniappsakshope"
  Docker.url: "uniappsakshope.azurecr.io"
  Kubernetes.serviceConnection: "ICTD-HOPE-DEV-uni-apps-aks-dev-ictd-hope-dev-1593457625386"
  Kubernetes.namespace: "ictd-hope-dev"

stages:
  - stage: build_and_push
    displayName: BUILD and PUSH
    jobs:
      - job: build_push_backend
        pool:
          vmImage: ubuntu-latest
        displayName: "[Build]"
        steps:
          - task: Docker@2
            displayName: Build&Push Backend
            inputs:
              command: buildAndPush
              dockerfile: $(Docker.backend.filePath)
              repository: $(Docker.repository)
              containerRegistry: $(Docker.registry)
              tags: |
                $(Build.BuildId)
                dev-latest

  - stage: test
    displayName: TEST
    jobs:
      - job: django_tests
        pool:
          vmImage: ubuntu-latest
        displayName: "[DJANGO TEST]"
        variables:
          backend_image: $(Docker.url)/$(Docker.backend.repository):$(Build.BuildId)
        steps:
          - task: Docker@2
            displayName: "[ACR] Login"
            inputs:
              command: login
              containerRegistry: $(Docker.registry)
          - task: DownloadSecureFile@1
            inputs:
              secureFile: '.env-django-test'
          - task: CmdLine@2
            displayName: "Setup .env and docker-compose.tst.yml"
            inputs:
              script: |
               mv deployment/docker-compose.tst.yml docker-compose.tst.yml
               mv $(Agent.TempDirectory)/.env-django-test .env

          - task: DockerCompose@0
            displayName: "Run tests"
            inputs:
              containerregistrytype: 'Azure Container Registry'
              azureContainerRegistry: $(Docker.registry)
              dockerComposeFile: '**/docker-compose.tst.yml'
              action: 'Run a Docker Compose command'
              dockerComposeCommand: 'run backend ./docker-test-entrypoint.sh'
              dockerComposeFileArgs: |
               backend_image=$(Docker.url)/$(Docker.backend.repository):$(Build.BuildId)

          - task: PublishTestResults@2
            displayName: "Publish Test Result"
            condition: always()
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '*.xml'
              searchFolder: 'backend/test-results/'
              mergeTestResults: true
              failTaskOnFailedTests: true
              testRunTitle: 'TEST Results'
