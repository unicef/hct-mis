trigger:
  batch: true
  branches:
    include:
    - master
    - develop
  paths:
    exclude:
    -  docs/*

resources:
  - repo: self

variables:
  frontendDockerFilePath: "**/frontend/Dockerfile"
  backendDockerFilePath: "**/backend/Dockerfile"
  kubernetesServiceConnection: 'ICTD-HCT-MIS-Demo-uni-apps-K8s-dev-hct-ims-dev-1574767480012'
  imageRepository: "hct-mis"
  containerRegistry: "uniappsk8sdevacr"

stages:
  - stage: Build
    displayName: Build and push images
    jobs:
      - job: Build
        displayName: Build
        steps:
          - task: Docker@2
            displayName: Build and push backend image
            inputs:
              command: buildAndPush
              dockerfile: $(backendDockerFilePath)
              repository: $(imageRepository)
              containerRegistry: $(containerRegistry)
              imageName: backend
              tags: |
                $(Build.BuildId)

          - task: Docker@2
            displayName: Build and push frontend image
            inputs:
              command: buildAndPush
              dockerfile: $(frontendDockerFilePath)
              imageName: frontend
              repository: $(imageRepository)
              containerRegistry: $(containerRegistry)
              tags: |
                $(Build.BuildId)

  - stage: Deploy
    displayName: Deploy app to K8S cluster.
    jobs:
      - job: Deploy
        displayName: Deploy helm chart
        steps:
          - task: HelmDeploy@0
            displayName: Deploy Helm chart
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: 'ICTD-HCT-MIS-Demo-uni-apps-K8s-dev-hct-ims-dev-1574767480012'
              namespace: 'hct-mis-$(ENV)'
              command: 'upgrade'
              arguments: '--install --wait --namespace'
              chartType: 'FilePath'
              chartPath: '**/ops/helm'
              releaseName: 'hct-mis'
              overrideValues: 'env=dev,revision=$(Build.BuildId),backend.image=uniappsk8sdevacr.azurecr.io/hct-mis/backend:$(Build.BuildId),backend.secret.SECRET_KEY=$(SECRET_KEY),backend.secret.ENV=$(ENV),backend.secret.POSTGRES_DB=$(POSTGRES_DB),backend.secret.POSTGRES_USER=$(POSTGRES_USER),backend.secret.POSTGRES_PASSWORD=$(POSTGRES_PASSWORD),backend.secret.POSTGRES_HOST=$(POSTGRES_PASSWORD),backend.secret.DJANGO_ALLOWED_HOST=$(DJANGO_ALLOWED_HOST),backend.secret.DOMAIN=$(DOMAIN),postgres.secret.POSTGRES_DB=$(POSTGRES_DB),postgres.secret.POSTGRES_USER=$(POSTGRES_USER),postgres.secret.POSTGRES_PASSWORD=$(POSTGRES_PASSWORD),'


